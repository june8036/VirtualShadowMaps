#pragma kernel CSMain

Texture2D<float> depthMapRaw;
RWTexture2D<float> depthMap;
RWStructuredBuffer<float2> minMaxDepthBuffer;

[numthreads(16,16,1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	int rectWidth = 64;

	float minD = 1;
	float maxD = 0;

	for (int i = 0; i < rectWidth; i++)
	{
		for (int j = 0; j < rectWidth; j++)
		{
			uint2 index = id.xy * rectWidth + uint2(i, j);
			float d = depthMapRaw[index];
			minD = min(minD, d);
			maxD = max(maxD, d);
		}
	}

	if (minD == maxD)
	{
		minD = 0;
		maxD = 1;
	}
	
	for (int i = 0; i < rectWidth; i++)
	{
		for (int j = 0; j < rectWidth; j++)
		{
			uint2 index = id.xy * rectWidth + uint2(i, j);
			float d = depthMapRaw[index];
			depthMap[index] = (d - minD) / (maxD - minD);
		}
	}

	minMaxDepthBuffer[id.y * 16 + id.x] = float2(minD, maxD);
}